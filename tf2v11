Bootstrap: docker
From: centos:7

%help
    Container for 
    tensorflor-gpu=2.8.0
    torch1.11.0+cu113
    cudatoolkit=11.6.2
    cudnn=8.4.0.27
    jupyter
    jupyterlab
    tensorRT=8.4.1.5
    no nvidia-driver 470
    CentOS 7
    python 3.8

%environment
    # Set system locale, cuDNN has to be downloaded locally
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    CUDA=/usr/local/cuda/lib64:/usr/local/cuda-11.6/lib64:/usr/local/cuda-11.6/targets/x86_64-linux/lib/
    LD_LIBRARY_PATH=/.singularity.d/libs:$CUDA
    PYTHONPATH=/opt/rh/rh-python38/root/usr/bin/python:/opt/rh/rh-python38/root/usr/bin/python3.8
    LANG=C.UTF-8 LC_ALL=C.UTF-8

%post
    # Change to tmp directory to download temporary files.
    #echo 'Dpkg::Post-Invoke {"/bin/chown -R root:root /var/lib/apt /var/cache/apt";};' > /etc/apt/apt.conf.d/singularity-chown

    cd /tmp
    # Install essential software, languages and libraries.
    yum install -y -q deltarpm
    yum update -y -q
    yum makecache

    yum install -y \
        autoconf \
        automake \
        yum-utils \
        bzip2 \
        ca-certificates \
        cmake \
        gcc \
        dialog \
        gcc-c++ \
        gcc-gfortran \
        git \
        gnupg2 \
        bash \
        epel-release \
        kernel-devel \
        libtool \
        libjpeg-devel \
        zlib-devel \
        zlib \
        eigen3-devel \
        bzip2-devel \
        libffi-devel \
        libXt-devel \
        xz-devel \
        make \
        neovim \
        perl \
        ncurses-devel \
        sqlite-devel \
        readline-devel \
        tk-devel \
        gdbm-devel \
        db4-devel \
        libpcap-devel \
        java-1.8.0-openjdk-devel \
        swig \
        vim \
        less \
        wget \
        xorg-x11-server-Xvfb \
        libXfont \
        zip \
        environment-modules \
        opencl-headers \
        opencl-filesystem \
        ocl-icd \
        openssl-devel \
        kernel-headers \
        dkms 

    yum install -y -q centos-release-scl-rh
    yum --enablerepo=centos-sclo-rh -y install rh-python38 \
        rh-python38-scldevel
        
    export LANG=en_US.utf-8
    echo "LC_ALL=en_US.utf-8" >> /etc/environment

    echo "source /opt/rh/rh-python38/enable" >> /etc/profile.d/python38.sh
    echo "X_SCLS=\"`scl enable rh-python38 'echo $X_SCLS'`\"" >> /etc/profile.d/python38.sh
    scl enable rh-python38 - << EOF >/dev/null 2>&1
    which python
    python -m pip install --upgrade pip
    python -m pip --no-cache-dir install setuptools --upgrade
    EOF

    #wget https://developer.download.nvidia.com/compute/cuda/11.6.2/local_installers/cuda-repo-rhel7-11-6-local-11.6.2_510.47.03-1.x86_64.rpm
    rpm -i cuda-repo-rhel7-11-6-local-11.6.2_510.47.03-1.x86_64.rpm
    yum clean all
    yum -y install nvidia-driver-latest-dkms cuda
    yum -y install cuda-drivers

    rpm -i cudnn-local-repo-rhel7-8.4.0.27-1.0-1.x86_64.rpm
    yum clean all

    #install runtime library
    yum install -y libcudnn8-8.4.0.27-1.cuda11.6
    yum install -y libcudnn8-devel-8.4.0.27-1.cuda11.6
    yum install -y libcudnn8-samples-8.4.0.27-1.cuda11.6

    # Install TensorRT 8.2.4. outside of the built


    # Cleanup
    yum -q clean all
    rm -rf /tmp/mpi
    rm -rf /var/lib/apt/lists/*

%labels
    Author yinuo
    Version v0.0.1
    Ref https://blog.csdn.net/lkgCSDN/article/details/84403329
    Also check https://superuser.com/questions/331242/why-do-i-get-failed-to-set-locale-defaulting-to-c-when-using-yum
